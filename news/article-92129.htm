<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnagent.github.io/news/article-92129.htm" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Vue中 Vue.prototype 详解及使用</title>
        <meta name="description" content="我们可能会在很多组件里用到数据/实用工具，但是不想污染全局作用域。这种情况下，可以通过在原型上定义它们使其在每个 Vue 的实例中可用。 1. 基本示例 在main.js中添加一个变量到 Vue.pr" />
        <link rel="icon" href="/assets/website/img/v2ray_free/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN代理 订阅链接节点中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnagent.github.io/news/article-92129.htm" />
    <meta property="og:site_name" content="VPN代理 订阅链接节点中文网" />
    <meta property="og:title" content="Vue中 Vue.prototype 详解及使用" />
    <meta property="og:image" content="https://vpnagent.github.io/uploads/20241107/b840ad329894bd4c2cd5f317fb945e66.webp" />
        <meta property="og:release_date" content="2025-04-09T09:17:52" />
    <meta property="og:updated_time" content="2025-04-09T09:17:52" />
        <meta property="og:description" content="我们可能会在很多组件里用到数据/实用工具，但是不想污染全局作用域。这种情况下，可以通过在原型上定义它们使其在每个 Vue 的实例中可用。 1. 基本示例 在main.js中添加一个变量到 Vue.pr" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Vue中 Vue.prototype 详解及使用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- All CSS files -->
    <link rel="stylesheet" href="/assets/website/css/v2ray_free/font-awesome.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_free/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_free/slick.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_free/slick-theme.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_free/smoothScorllbar.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_free/app.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SPD2ENWF9H"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SPD2ENWF9H');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="tt-smooth-scroll" data-page="detail">
    <!-- PRELOADER START -->
    <div id="preloader">
        <div class="container">
            <div class="loading">
                <div class="loading__letter">V</div>
                <div class="loading__letter">2</div>
                <div class="loading__letter">R</div>
                <div class="loading__letter">A</div>
                <div class="loading__letter">Y&nbsp;</div>
                <div class="loading__letter">&nbsp;</div>
                <div class="loading__letter">F</div>
                <div class="loading__letter">R</div>
                <div class="loading__letter">E</div>
                <div class="loading__letter">E</div>
            </div>
        </div>
    </div>
    <!-- PRELOADER END -->
    <!-- Main Wrapper Start -->
    <div id="scroll-container">
                <!-- HEADER MENU START -->
        <header class="header">
            <div class="container-fluid">
                <nav class="navigation d-flex align-items-center justify-content-between">
                    <a href="/" class="d-flex align-items-center logo-box">
                                                <span>VPN代理</span>
                                            </a>
                    <div class="menu-button-right">
                        <div class="main-menu__nav">
                            <ul class="main-menu__list">
                                                                <li>
                                    <a href="/">首页</a>
                                </li>
                                                                <li>
                                    <a href="/free-nodes/">免费节点</a>
                                </li>
                                                                <li>
                                    <a href="/paid-subscribe/">推荐机场</a>
                                </li>
                                                                <li>
                                    <a href="/news/">新闻资讯</a>
                                </li>
                                                                <li>
                                    <a href="/client.htm">客户端</a>
                                </li>
                                                            </ul>
                        </div>
                    </div>
                </nav>
            </div>
        </header>
        <!-- HEADER MENU END -->
        <!-- TITLE BANNER START -->
        <section class="title-banner">
            <div class="container-fluid">
                <div class="row justify-content-center">
                    <div class="col-lg-10 col-md-11">
                        <div class="title-wrapper">
                            <div class="row align-items-center">
                                <div class="col-lg-6 col-sm-6">
                                    <div class="title-content">
                                        <h1 class="white fw-700">Vue中 Vue.prototype 详解及使用</h1>
                                        <small>
                                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                        </small>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-sm-6 d-sm-block d-none">
                                    <div class="title-image">
                                        <img src="static/picture/title-banner.png" alt="">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- TITLE BANNER END -->
                <!-- WHY CHOOSE US -->
        <section class="why-choose-us py-80">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>我们可能会在很多组件里用到数据/实用工具，但是不想污染全局作用域。这种情况下，可以通过在原型上定义它们使其在每个 Vue 的实例中可用。</p> <h4><a id="1__1" rel="nofollow"></a>1. 基本示例</h4> <p>在main.js中添加一个变量到 Vue.prototype</p> <pre><code class="prism language-javascript">Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$appName<span class="token operator">=</span><span class="token string">'My App'</span></code></pre> <p>这样 $appName 就在所有的 Vue 实例中可用了，甚至在实例被创建之前就可以</p> <pre><code class="prism language-javascript"><span class="token keyword">new</span><span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>   beforeCreate<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$appName<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre> <p>控制台会打印出 My App，就这么简单！</p> <h4><a id="2_prototype_17" rel="nofollow"></a>2. 为实例prototype设置作用域</h4> <p>为什么 appName 要以 $ 开头？这很重要吗？<br /> 这里没有什么魔法。$ 是在 Vue 所有实例中都可用的 property 的一个简单约定。这样做会避免和已被定义的数据、方法、计算属性产生冲突。<br /> 如果我们设置：</p> <pre><code class="prism language-javascript">Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>appName<span class="token operator">=</span><span class="token string">'My App'</span></code></pre> <p>那么如下的代码输出什么：</p> <pre><code class="prism language-javascript"><span class="token keyword">new</span><span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>   data<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 啊哦，`appName` 也是一个我们定义的实例 property 名！</span>     appName<span class="token punctuation">:</span><span class="token string">'The name of some other app'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>   beforeCreate<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>appName<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>   created<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>appName<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre> <p>日志中会先出现 “My App”，然后出现 “The name of some other app”，因为 this.appName 在实例被创建之后被 data 覆写了。我们通过 $ 为实例 property 设置作用域来避免这种事情发生。你还可以根据你的喜好使用自己的约定，诸如 $_appName 或 ΩappName，来避免和插件或未来的插件相冲突。</p> <h4><a id="3__42" rel="nofollow"></a>3. 注册和使用全局变量</h4> <p>每个组件都是一个vue实例，Vue.prototype加一个变量，只是给每个组件加了一个属性，这个属性的值并不具有全局性。<br /> 比如以下例子：</p> <pre><code class="prism language-javascript"><span class="token comment">// main.js</span><span class="token keyword">import</span> Vue<span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">import</span> App<span class="token keyword">from</span><span class="token string">'./App'</span><span class="token keyword">import</span> router<span class="token keyword">from</span><span class="token string">'./router'</span><span class="token keyword">import</span> store<span class="token keyword">from</span><span class="token string">'./store'</span>  Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip<span class="token operator">=</span><span class="token boolean">false</span> Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$appName<span class="token operator">=</span><span class="token string">'main'</span><span class="token keyword">new</span><span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>     el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>     store<span class="token punctuation">,</span>     router<span class="token punctuation">,</span>     components<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> App<span class="token punctuation">}</span><span class="token punctuation">,</span>     template<span class="token punctuation">:</span><span class="token string">'&lt;App/&gt;'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 给所有组件注册了一个属性 $appName，赋予初始值 'main' ，所有组件都可以用 this.$appName 访问此变量;</span><span class="token comment">// 如果组件中没有赋值，初始值都是'main'</span></code></pre> <pre><code class="prism language-javascript"><span class="token comment">// home.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div @click<span class="token operator">=</span><span class="token string">"changeName"</span><span class="token operator">&gt;</span>change name<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div @click<span class="token operator">=</span><span class="token string">"gotoTest2"</span><span class="token operator">&gt;</span>goto test2<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span>   methods<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token function">changeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>$appName<span class="token operator">=</span><span class="token string">"test1"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">gotoTest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/about'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <pre><code class="prism language-javascript"><span class="token comment">// about.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>$appName<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">in</span> test2<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></code></pre> <p>点击 home 中的 change name 再跳转about，about里面还是显示 main in test2</p> <p><strong>如果要实现全局变量的功能，需要把属性变为引用类型</strong></p> <pre><code class="prism language-javascript">Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$appName<span class="token operator">=</span><span class="token punctuation">{<!-- --></span> name<span class="token punctuation">:</span><span class="token string">'main'</span><span class="token punctuation">}</span></code></pre> <p><strong>后面使用 this.$appName.name 改变和引用相应的值</strong><br /> 这进入 about 后显示 test1 in test2</p> <h4><a id="4__108" rel="nofollow"></a>4. 原型方法的上下文</h4> <p>在 JavaScript 中一个原型的方法会获得该实例的上下文,也就是说可以使用 this 访问：数据、计算属性、方法或其它任何定义在实例上的东西。<br /> 让我们将其用在一个名为 $reverseText 的方法上：</p> <pre><code class="prism language-javascript"><span class="token comment">// main.js</span> Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$reverseText</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">[</span>propertyName<span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">[</span>propertyName<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> <pre><code class="prism language-javascript"><span class="token comment">// 相应组件</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>       message<span class="token punctuation">:</span><span class="token string">'Hello'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token comment">// =&gt; "Hello"</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$reverseText</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">)</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token comment">// =&gt; "olleH"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <h4><a id="5__140" rel="nofollow"></a>5. 应用示例</h4> <p><strong>5.1 引入 axios</strong></p> <pre><code class="prism language-javascript">npm install vue<span class="token operator">-</span>axios<span class="token operator">--</span>save  npm install qs<span class="token punctuation">.</span>js<span class="token operator">--</span>save<span class="token comment">//它的作用是能把json格式的直接转成data所需的格式</span></code></pre> <pre><code class="prism language-javascript"><span class="token comment">// mian.js</span><span class="token keyword">import</span> Vue<span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">import</span> axios<span class="token keyword">from</span><span class="token string">'axios'</span><span class="token keyword">import</span> qs<span class="token keyword">from</span><span class="token string">'qs'</span>  Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$axios<span class="token operator">=</span> axios<span class="token comment">//全局注册，使用方法为:this.$axios</span> Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>qs<span class="token operator">=</span> qs<span class="token comment">//全局注册，使用方法为:this.qs</span></code></pre> <pre><code class="prism language-javascript"><span class="token comment">// 相应组件</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>         userId<span class="token punctuation">:</span><span class="token number">666</span><span class="token punctuation">,</span>　　　　　　　　　         token<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$axios</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>         method<span class="token punctuation">:</span><span class="token string">'post'</span><span class="token punctuation">,</span>         url<span class="token punctuation">:</span><span class="token string">'api'</span><span class="token punctuation">,</span>         data<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token comment">//这里是发送给后台的数据</span>           userId<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>userId<span class="token punctuation">,</span>           token<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>token<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span><span class="token comment">//这里使用了ES6的语法</span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token comment">//请求成功返回的数据</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment">//请求失败返回的数据</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-91352.htm">【TypeScript】TypeScript 与 JavaScript 有何不同？</a></p>
                                        <p>下一个：<a href="/news/article-92130.htm">vue如何实现关闭对话框后刷新列表_vue.js</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-27-node-share-links.htm" title="VPN代理 | 3月27日21.1M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点订阅分享">VPN代理 | 3月27日21.1M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-92849.htm" title="【南京宠物寄养|南京宠物寄养信息】 南京宠物寄养一般怎么收费">【南京宠物寄养|南京宠物寄养信息】 南京宠物寄养一般怎么收费</a></li>
                        <li class="py-2"><a href="/news/article-91351.htm" title="Django实现excel导入导出">Django实现excel导入导出</a></li>
                        <li class="py-2"><a href="/news/article-66625.htm" title="国内动物疫苗龙头企业名单公示最新（全球动物疫苗龙头公司）">国内动物疫苗龙头企业名单公示最新（全球动物疫苗龙头公司）</a></li>
                        <li class="py-2"><a href="/news/article-86997.htm" title="在拦截器中获取 url 路径里面 @PathVariable 的参数值">在拦截器中获取 url 路径里面 @PathVariable 的参数值</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-3-node-share-links.htm" title="VPN代理 | 3月3日18M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点订阅分享">VPN代理 | 3月3日18M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-75820.htm" title="办理动物医院需要什么手续吗要多少钱一个月（开动物医院需要什么）">办理动物医院需要什么手续吗要多少钱一个月（开动物医院需要什么）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-5-node-share-links.htm" title="VPN代理 | 3月5日19.9M/S|免费VPN/Clash/V2ray/Shadowrocket/SSR免费节点订阅分享">VPN代理 | 3月5日19.9M/S|免费VPN/Clash/V2ray/Shadowrocket/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-67873.htm" title="去哪领养宠物（一般去哪里领养宠物?）">去哪领养宠物（一般去哪里领养宠物?）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-node-share-links.htm" title="VPN代理 | 3月25日19.4M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点订阅分享">VPN代理 | 3月25日19.4M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- WHY CHOOSE US -->
                <!-- FOOTER START -->
        <footer class="bg-primary pt-sm-40 pt-80 pb-24">
            <div class="container-fluid">
                <div class="hr-line mb-24 bg-light-gray"></div>
                <p class="bottom-bar light-white text-center">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">VPN代理 订阅链接节点中文网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </footer>
        <!-- FOOTER END -->
        <!-- Back To Top Start -->
        <button id="back-to-top" style="display: none;"><i class="fa-solid fa-arrow-turn-up"></i></button>
        <!-- Mobile Menu Start -->
        <div class="mobile-nav__wrapper">
            <div class="mobile-nav__overlay mobile-nav__toggler"></div>
            <div class="mobile-nav__content">
                <span class="mobile-nav__close mobile-nav__toggler"><i class="fa fa-times"></i></span>
                <div class="logo-box">
                    <a href="" aria-label="logo image"><img src="/assets/website/img/v2ray_free/logo.png" alt=""></a>
                </div>
                <div class="mobile-nav__container"></div>
                <ul class="mobile-nav__contact list-unstyled">
                    <li>
                        <i class="fas fa-envelope"></i>
                        <a href="mailto:example@company.com">example@company.com</a>
                    </li>
                    <li>
                        <i class="fa fa-phone-alt"></i>
                        <a href="tel:+12345678">+123 (4567) -890</a>
                    </li>
                </ul>
                <div class="mobile-nav__social">
                    <a href=""><i class="fa-brands fa-x-twitter"></i></a>
                    <a href=""><i class="fab fa-facebook"></i></a>
                    <a href=""><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <!-- Mobile Menu End -->
        <!-- Jquery Js -->
        <script src="/assets/website/js/frontend/v2ray_free/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/v2ray_free/jquery-3.6.3.min.js"></script>
        <script src="/assets/website/js/frontend/v2ray_free/slick.min.js"></script>
        <script src="/assets/website/js/frontend/v2ray_free/smooth-scrollbar.js"></script>
        <script src="/assets/website/js/frontend/v2ray_free/app.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- Main Wrapper End -->
</body>

</html>